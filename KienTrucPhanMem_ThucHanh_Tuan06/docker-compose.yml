version: '3.8'

services:
  # MongoDB instances for each service
  product-db:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - product-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  order-db:
    image: mongo:latest
    ports:
      - "27018:27017"
    volumes:
      - order-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  customer-db:
    image: mongo:latest
    ports:
      - "27019:27017"
    volumes:
      - customer-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  # RabbitMQ message broker
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"  # AMQP protocol port
      - "15672:15672"  # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  # Microservices
  product-service:
    build: ./product-service
    ports:
      - "8081:8081"
    depends_on:
      - product-db
      - rabbitmq
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://root:example@product-db:27017/product?authSource=admin
      - SPRING_RABBITMQ_HOST=rabbitmq

  order-service:
    build: ./order-service
    ports:
      - "8082:8082"
    depends_on:
      - order-db
      - rabbitmq
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://root:example@order-db:27017/order?authSource=admin
      - SPRING_RABBITMQ_HOST=rabbitmq

  customer-service:
    build: ./customer-service
    ports:
      - "8083:8083"
    depends_on:
      - customer-db
      - rabbitmq
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://root:example@customer-db:27017/customer?authSource=admin
      - SPRING_RABBITMQ_HOST=rabbitmq

  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - product-service
      - order-service
      - customer-service

volumes:
  product-data:
  order-data:
  customer-data: 